var D=Object.defineProperty;var T=(t,s,e)=>s in t?D(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var o=(t,s,e)=>(T(t,typeof s!="symbol"?s+"":s,e),e);(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();class x{constructor(s,e,n){o(this,"type");o(this,"target");o(this,"data");this.type=s,this.target=e,this.data=n}}class O{constructor(){o(this,"eventHandler_ListenerStorage",{})}on(s,e){let n=this.eventHandler_ListenerStorage[s];return n?n.indexOf(e)==-1?n.push(e):console.warn("Listener already in handler"):this.eventHandler_ListenerStorage[s]=[e],e}once(s,e){return this.on(s,function(n){return e(n),!0}),e}off(s,e){let n=this.eventHandler_ListenerStorage[s];if(n){let i=n.indexOf(e);return i!=-1?n.splice(i,1):console.warn("Listener not in handler"),e}}emit(s,e){let n=this.eventHandler_ListenerStorage[s];if(n&&n.length>0){let i=Object.freeze(new x(s,this,e));n.length>1&&(n=[...n]);for(let r=0,l=n.length;r<l;r++)try{n[r](i)&&(n.splice(r,1),l--,r--)}catch(y){console.warn("Failed while dispatching event",y)}}}clear(s){this.eventHandler_ListenerStorage[s]=[]}inUse(s){var e;return Boolean((e=this.eventHandler_ListenerStorage[s])==null?void 0:e.length)}has(s,e){var n;return Boolean(((n=this.eventHandler_ListenerStorage[s])==null?void 0:n.indexOf(e))!==-1)}amount(s){var e;return((e=this.eventHandler_ListenerStorage[s])==null?void 0:e.length)||0}}const L="@chocolatelibui/core";var u=(t=>(t[t.Connect=0]="Connect",t[t.Disconnect=1]="Disconnect",t[t.Adopted=2]="Adopted",t))(u||{});class w extends HTMLElement{constructor(){super(...arguments);o(this,"$connectedObserver");o(this,"isVisible",!1);o(this,"events",new O)}static elementName(){return"@abstract@"}static elementNameSpace(){return L.replace("@","").replace("/","-")}connectedCallback(){this.$connectedObserver?this.$connectedObserver.observe(this):(this.events.emit("connect",0),this.isVisible=!0)}disconnectedCallback(){this.$connectedObserver?(this.$connectedObserver.unobserve(this),this.isVisible&&(this.events.emit("connect",1),this.isVisible=!1)):(this.events.emit("connect",1),this.isVisible=!1)}adoptedCallback(){this.events.emit("connect",2)}options(e){return this}attachToObserver(e){e?(this.$connectedObserver=e,this.isConnected&&e.observe(this)):this.$connectedObserver&&(this.isConnected&&this.$connectedObserver.unobserve(this),this.isVisible||(this.events.emit("connect",0),this.isVisible=!0),delete this.$connectedObserver)}}const E=new Set(["annotation-xml","color-profile","font-face","font-face-src","font-face-uri","font-face-format","font-face-name","missing-glyph"]);var H=/^[a-z](?:[\.0-9_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])*-(?:[\x2D\.0-9_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])*$/;let S=t=>t?/[A-Z]/.test(t)?"Custom element names must not contain uppercase ASCII characters.":t.includes("-")?/^\d/i.test(t)?"Custom element names must not start with a digit.":/^-/i.test(t)?"Custom element names must not start with a hyphen.":H.test(t)?E.has(t)?`The supplied element name is reserved and can't be used.
See: https://html.spec.whatwg.org/multipage/scripting.html#valid-custom-element-name`:"Unknown fault":"Invalid element name.":"Custom element names must contain a hyphen. Example: unicorn-cake":"Missing element name.",k=t=>{let s=t.elementNameSpace(),e=t.elementName,n="",i=t;for(;i!==HTMLElement&&s===i.elementNameSpace();){let r=i.elementName();if(i=Object.getPrototypeOf(i),e===i.elementName)throw new Error("Element uses same name as ancestor, abstract classes should return '@abstract@'");if(!r.length)throw new Error("Element doesn't define element name");r!=="@abstract@"&&(n="-"+r+n)}n=s+n;try{customElements.define(n,t)}catch{throw S(n)+" "+n}};class $ extends IntersectionObserver{constructor(s){super(e=>{for(let n=0;n<e.length;n++)e[n].isIntersecting?e[n].target.isVisible||(e[n].target.events.emit("connect",u.Connect),e[n].target.isVisible=!0):e[n].target.isVisible&&(e[n].target.events.emit("connect",u.Disconnect),e[n].target.isVisible=!1)},s)}}class m extends w{constructor(e){super();o(this,"connects",0);o(this,"disconnects",0);this.style.height="2rem",this.events.on("connect",n=>{switch(n.data){case u.Connect:this.connects++,this.style.backgroundColor="green",console.log("test1");break;case u.Disconnect:this.disconnects++,this.style.backgroundColor="red",console.log("test2");break}this.innerHTML=`Test Element ${e} Connects:${this.connects} Disconnects${this.disconnects}`})}static elementName(){return"testclass"}options(e){return this}}k(m);let f=document.body.appendChild(document.createElement("div")),N=f.appendChild(document.createElement("div"));N.innerHTML="Test Connecting";let g=f.appendChild(document.createElement("button"));g.innerHTML="Toggle Connect";g.onclick=()=>{c.children.length===0?b.forEach(t=>{c.appendChild(t)}):c.replaceChildren()};let c=f.appendChild(document.createElement("div"));c.style.display="flex";c.style.flexDirection="column";let b=[];for(let t=0;t<=19;t++){let s=new m(String(t));c.appendChild(s),b[t]=s}let d=document.body.appendChild(document.createElement("div")),B=d.appendChild(document.createElement("div"));B.innerHTML="Test Observer";let v=d.appendChild(document.createElement("button"));v.innerHTML="Toggle Observer";let h=!0;v.onclick=()=>{p.forEach(t=>{t.attachToObserver(h?void 0:C)}),h=!h};let F=d.appendChild(document.createElement("button"));F.innerHTML="Toggle Connect";F.onclick=()=>{a.children.length===0?p.forEach(t=>{a.appendChild(t)}):a.replaceChildren()};let a=d.appendChild(document.createElement("div"));a.style.display="flex";a.style.flexDirection="column";let C=new $({threshold:1}),p=[];for(let t=0;t<=99;t++){let s=new m(String(t));s.attachToObserver(C),a.appendChild(s),p[t]=s}
